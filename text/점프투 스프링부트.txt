
스프링부트 프로젝트 기본 구조

ORM

JPA

=================================================================================

스프링부트 프로젝트 기본 구조

- src/main/java 디렉토리

스프링부트 컨트롤러, 폼, DTO, 데이터베이스 처리를 위한 엔티티, 서비스 파일 등 작성하는 공간.



- 프로젝트명 + Application.java 파일

스프링부트 어플리케이션에서 시작을 담당하는 파일. (자동생성)
application 클래스 위에는 반드시 @SpringBootApplication 어노테이션 존재해야 한다. -> 모든 설정 관리



- templates 디렉토리

(src/main/resources 디렉토리 하위) 디렉토리인 templates 디렉토리에는 템플릿 파일을 저장한다.
템플릿 파일은 HTML 파일 형태로 자바 객체와 연동되는 파일. templates 디렉토리에는 질문목록, 질문 상세 등의 html 파일 저장.



- static 디렉토리
(src/main/resources 디렉토리 하위) 프로젝트 css, js, 이미지 파일 등을 저장하는 공간.



- application.properties

(src/main/resources 디렉토리 하위) 프로퍼티 파일은 프로젝트  환경 설정 역할.
프로젝트 환경, DB 설정 등을 이 파일에 저장.



- src/test/java 디렉토리

프로젝트에서 작성한 파일을 테스트하기 위한 테스트 코드 작성 공간.
JUnit과 스프링부트 테스팅 도구 사용하여 서버를 실행하지 않은 상태에서 src/main/java 디렉토리 작성 코드 테스트.



- build.gradle 파일

그레이들이 사용하는 환경 파일. ant, maven과 같은 이전 세대 빌드 도구의 단점을 보완하고 장점을 취합하여 만든 빌드 도구.
build.gradle 파일에는 프로젝트를 위한 필요한 플러그인과 라이브러리 등을 기술.

--------------------------------------------------------------------------------------------------------------------------------------------------

ORM (Object Relational Mapping)

객체와 관계형 데이터베이스의 데이터를 자동으로 매핑(연결)해주는 것
DB에 데이터를 저장하는 테이블을 자바 클래스로 만들어 관리 가능하게 해주는 기술.
DB 종류와 상관없이 일관된 코드 유지 가능.
유지보수 용이 / 개발자가 달라도 통일된 쿼리 작성 가능 / 오류 발생률 낮아짐

-------------------------------------------------------------------------------------------------------------------------------------------------

JPA (Java Persistence API)

자바진영에서 ORM의 기술표준으로 사용하는 인터페이스 모음

JPA는 인터페이스이므로 구현하는 실제 클래스 필요.
대표적 클래스에는 하이버네이트가 있다.

--------------------------------------------------------------------------------------------------------------






















